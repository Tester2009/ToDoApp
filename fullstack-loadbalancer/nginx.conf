events {}
http {
    upstream backend1 {
        server backend-1:8080;
    }

    upstream backend2 {
        server backend-2:8080;
    }

    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;                

    server {
        listen 8000;

        # # Route /api/ and /api/create to backend1
        location /api/ {
            rewrite ^/api/(.*) /$1 break;
            proxy_pass http://backend1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route /api/ and /api/create to backend1
        location /api/create {
            rewrite ^/api/(.*) /$1 break;
            proxy_pass http://backend1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route /api/ and /api/create to backend1
        location /api/update {
            rewrite ^/api/(.*) /$1 break;
            proxy_pass http://backend2;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route /api/ and /api/create to backend1
        location /api/delete {
            rewrite ^/api/(.*) /$1 break;
            proxy_pass http://backend2;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}